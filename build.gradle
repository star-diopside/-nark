buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE"
    }
}

allprojects {
    group = "jp.gr.java_conf.star_diopside.nark"
    version = "1.0.0-SNAPSHOT"

    ext {
        lombokVersion = "1.16.10"

        silverCommonsVersion = "1.0.0-SNAPSHOT"
        springBootVersion = "1.4.0.RELEASE"
        commonsCliVersion = "1.3.1"
        postgresqlVersion = "9.4.1209"

        normalizeCssVersion = "3.0.2"
        bootstrapVersion = "3.3.7-1"
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "maven"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "checkstyle"
    apply plugin: "findbugs"
    apply plugin: "jacoco"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
        }
    }

    javadoc {
        options.charSet = "UTF-8"
        options.encoding = "UTF-8"
    }

    checkstyle {
        toolVersion = "7.1.1"
        configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
        ignoreFailures = true
    }

    findbugs {
        toolVersion = "3.0.1"
        ignoreFailures = true
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    jacoco {
        toolVersion = "0.7.7.201606060606"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = "sources"
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = "javadoc"
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

project("nark-data") {
    dependencies {
        compile "jp.gr.java_conf.star_diopside.silver.commons:silver-commons-data:${silverCommonsVersion}"
        compile "org.springframework.boot:spring-boot-starter-data-jpa"
        compile "org.springframework.security:spring-security-core"
        compile "org.hibernate:hibernate-validator"
    }
}

project("nark-service") {
    dependencies {
        compile project(":nark-data")
    }
}

project("nark-controller") {
    dependencies {
        compile project(":nark-service")
        compile "org.springframework.boot:spring-boot-starter-web"
        compile "org.springframework.boot:spring-boot-starter-security"
    }
}

project("nark-view") {
    dependencies {
        compile "org.springframework.boot:spring-boot-starter-thymeleaf"
        compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity4"
        compile "org.webjars:normalize.css:${normalizeCssVersion}"
        compile "org.webjars:bootstrap:${bootstrapVersion}"
    }
}

project("nark-web") {
    dependencies {
        compile project(":nark-controller")
        compile project(":nark-view")
        compile "org.liquibase:liquibase-core"
    }
}

project("nark-web-embed") {
    apply plugin: "spring-boot"

    dependencies {
        compile project(":nark-web")
        runtime "org.postgresql:postgresql:${postgresqlVersion}"
    }

    bootRepackage {
        mainClass = "jp.gr.java_conf.star_diopside.nark.Server"
    }
}

project("nark-web-war") {
    apply plugin: "war"

    dependencies {
        compile project(":nark-web")
        providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
        providedRuntime "org.postgresql:postgresql:${postgresqlVersion}"
    }

    war {
        archiveName = "nark-web.war"
    }
}

project("nark-user-registration") {
    apply plugin: "spring-boot"

    dependencies {
        compile project(":nark-service")
        compile "commons-cli:commons-cli:${commonsCliVersion}"
        runtime "org.apache.tomcat.embed:tomcat-embed-el"
        runtime "org.postgresql:postgresql:${postgresqlVersion}"
    }
}
